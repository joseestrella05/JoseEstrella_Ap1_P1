@page "/Cobro/Details/{CobroId:int}"
@rendermode InteractiveServer
@inject CobroServices CobroServices
@inject NavigationManager Navigation
<div class="container">
	<div class="card shadow-lg">

		<div class="card-header">
			<h2 class="card-title">Detalles Cobros</h2>
		</div>
		<div class="card-body">
			<h6> cobro:</h6>
			<ul>
				<li>Id: @Cobro.CobroId</li>
				<li>Deudor Id: @Cobro.DeudorId</li>
				<li>Fecha: @Cobro.Fecha</li>
				<li>Monto: @Cobro.Monto</li>
			</ul>

			<h6>Destalles de los cobro:</h6>
			<div class="border border-success p-3 mt-3">
				<ul>
					@foreach (var Detalles in Cobro.CobrosDetalles)
					{
						<li>Detalle Id: @Detalles.DetallId</li>
						<li>Id: @Detalles.CobroId</li>
						<li>Deudor Id: @Detalles.PrestamoId</li>
						<li>Monto: @Detalles.ValorCobrado</li>
					}
				</ul>
			</div>
			
			</div>
		<div class="card-footer">
			<a href="/Cobro/Index" class="btn btn-outline-primary bi bi-arrow-left"></a>
		</div>
	</div>

</div>
@code {
	[Parameter]
	public int CobroId { get; set; }
	public Cobros Cobro { get; set; } = new Cobros();
	public List<CobrosDetalles> ListDetalles { get; set; } = new List<CobrosDetalles>();


	protected override async Task OnInitializedAsync()
	{
		Cobro = await CobroServices.Buscar(CobroId);
		foreach(var detalle in Cobro.CobrosDetalles)
		{
			ListDetalles.Add(detalle);
		}
	}
}
