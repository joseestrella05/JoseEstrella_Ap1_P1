@page "/Prestamo/Edit/{Id:int}"
@rendermode InteractiveServer
@inject PrestamoService servicio
@inject DeudorServices DeudorService
@inject NavigationManager navigation

<PageTitle>Editar Prestamo</PageTitle>
<EditForm Model="pretamos" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container">
        <div class="card shadow-lg">
            @*header*@
            <div class="card-header bg-primary text-white text-center">
                <h2><strong>Modificar</strong></h2>
            </div>

            @*Body*@
            <div class="card-body">
                @*Id*@
                <label class="form-label" for="Id"><strong>Id</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="@pretamos.PrestamoId" readonly></InputNumber>

                @*Deudor*@
                <label class="form-label">Deudor</label>
                <InputSelect @bind-Value="pretamos.DeudorId" class="form-control">
                    <option value="0">Selecciona el deudor</option>
                    @foreach (var deudor in Deudores)
                    {
                        <option value="@deudor.DeudorId">@deudor.Nombres</option>
                    }
                </InputSelect>

                @*Concepto*@
                <label class="form-label" for="Concepto"><strong>Concepto</strong></label>
                <InputText id="WhatsApp" class="form-control" @bind-Value="@pretamos.Concepto"></InputText>
                <ValidationMessage For="@(() => pretamos.Concepto)"></ValidationMessage>

                @*Monto*@
                <label class="form-label" for="Monto"><strong>Monto</strong></label>
                <InputNumber id="WhatsApp" class="form-control" @bind-Value="@pretamos.Monto"></InputNumber>
                <ValidationMessage For="@(() => pretamos.Monto)"></ValidationMessage>
            </div>

            @*footer*@
            <div class="card-footer">
                <a type="button" href="/Pretamos/Index" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Volver </a>
                <button type="submit" class="btn btn-success bi bi-floppy-fill">Guardar</button>
            </div>
                
        </div>
    </div>
    
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    public Prestamos pretamos { get; set; } = new Prestamos();
    public List<Deudores> Deudores { get; set; } = new List<Deudores>();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            pretamos = await servicio.Buscar(Id);
            Deudores = await DeudorService.Listar(t => true);
        }
    }

    public async Task Modificar()
    {
        var guardar = await servicio.Guardar(pretamos);
        navigation.NavigateTo("/Pretamos/Index");
        return;
    }
    
}


